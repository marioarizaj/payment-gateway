name: Build & Lint & Test

on:
  push:
    branches:
      - main

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.0'
      # Run go vet
      - name: Vet code
        run: go vet ./...
      # Run build of the application
      - name: Run build
        run: go build ./...
  # Lint step
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.29
  # Run the tests
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: docker-compose up -d
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.0' # The Go version to download (if necessary) and use.
      - name: Run tests
        env:
          # Needed env variables
          DATABASE_URL: postgres://db_user:db_pass@localhost:5432/payment_gateway?sslmode=disable&dial_timeout=5s&read_timeout=5s&write_timeout=5s
          SERVER_PORT: 8080
          API_KEY_SECRET: super-secret-key
          ALLOWED_REQUESTS_PER_SECOND: 100
          REDIS_ADDRESS: localhost:6379
          HYSTRIX_COMMANDS: create_payment_in_acquiring_bank
          HYSTRIX_TIMEOUT: 1000
          HYSTRIX_MAX_CONCURRENT_REQUESTS: 200
          HYSTRIX_ERROR_PERCENT_THRESHOLD: 50
          HYSTRIX_REQUEST_VOLUME_THRESHOLD: 20
          HYSTRIX_SLEEP_WINDOW: 5000
          SERVER_IDLE_TIMEOUT: 30
          SERVER_READ_TIMEOUT: 2
          SERVER_WRITE_TIMEOUT: 2
        # Run tests with coverage
        run: go test --race -cover ./...
